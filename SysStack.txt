Symbol stack information:
Inserted element:
int KEYWORD
Stack Information:
8 int
0 $

Inserted element:
main ID
Stack Information:
11 ID
5 type_specifier
0 $

Inserted element:
( DELIMITER
Stack Information:
12 (
11 ID
5 type_specifier
0 $

Inserted element:
) DELIMITER
Stack Information:
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
{ DELIMITER
Stack Information:
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
int KEYWORD
Stack Information:
8 int
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
b ID
Stack Information:
66 ID
34 type_specifier
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
; DELIMITER
Stack Information:
101 ;
66 ID
34 type_specifier
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
int KEYWORD
Stack Information:
8 int
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
66 ID
34 type_specifier
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
; DELIMITER
Stack Information:
101 ;
66 ID
34 type_specifier
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
40 ID
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
= OPERATOR
Stack Information:
79 =
40 ID
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
0 INT
Stack Information:
41 INT
79 =
40 ID
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
; DELIMITER
Stack Information:
55 ;
23 expression
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
b ID
Stack Information:
40 ID
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
= OPERATOR
Stack Information:
79 =
40 ID
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
2.0 FLOAT
Stack Information:
39 FLOAT
79 =
40 ID
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
+ OPERATOR
Stack Information:
48 +
17 additive_expression
79 =
40 ID
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
4 INT
Stack Information:
41 INT
48 +
17 additive_expression
79 =
40 ID
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
* OPERATOR
Stack Information:
58 *
87 multiplicative_expression
48 +
17 additive_expression
79 =
40 ID
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
7 INT
Stack Information:
41 INT
58 *
87 multiplicative_expression
48 +
17 additive_expression
79 =
40 ID
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
; DELIMITER
Stack Information:
55 ;
23 expression
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
while KEYWORD
Stack Information:
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
( DELIMITER
Stack Information:
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
120 ID
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
> OPERATOR
Stack Information:
113 >
72 relational_expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
3 INT
Stack Information:
78 INT
113 >
72 relational_expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
) DELIMITER
Stack Information:
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
{ DELIMITER
Stack Information:
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
40 ID
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
= OPERATOR
Stack Information:
79 =
40 ID
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
40 ID
79 =
40 ID
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
+ OPERATOR
Stack Information:
48 +
17 additive_expression
79 =
40 ID
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
1 INT
Stack Information:
41 INT
48 +
17 additive_expression
79 =
40 ID
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
; DELIMITER
Stack Information:
55 ;
23 expression
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
b ID
Stack Information:
40 ID
85 statement_list
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
= OPERATOR
Stack Information:
79 =
40 ID
85 statement_list
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
b ID
Stack Information:
40 ID
79 =
40 ID
85 statement_list
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
+ OPERATOR
Stack Information:
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
88 ID
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
; DELIMITER
Stack Information:
55 ;
23 expression
85 statement_list
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
} DELIMITER
Stack Information:
124 }
85 statement_list
46 {
140 )
121 expression
83 (
45 while
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
if KEYWORD
Stack Information:
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
( DELIMITER
Stack Information:
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
120 ID
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
<= OPERATOR
Stack Information:
112 <=
72 relational_expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
b ID
Stack Information:
77 ID
112 <=
72 relational_expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
) DELIMITER
Stack Information:
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
{ DELIMITER
Stack Information:
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
= OPERATOR
Stack Information:
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
1 INT
Stack Information:
41 INT
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
+ OPERATOR
Stack Information:
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
2 INT
Stack Information:
41 INT
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
* OPERATOR
Stack Information:
58 *
87 multiplicative_expression
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
3 INT
Stack Information:
41 INT
58 *
87 multiplicative_expression
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
- OPERATOR
Stack Information:
49 -
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
6 INT
Stack Information:
41 INT
49 -
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
/ OPERATOR
Stack Information:
59 /
89 multiplicative_expression
49 -
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
3 INT
Stack Information:
41 INT
59 /
89 multiplicative_expression
49 -
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
+ OPERATOR
Stack Information:
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
2 INT
Stack Information:
41 INT
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
* OPERATOR
Stack Information:
58 *
87 multiplicative_expression
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
( DELIMITER
Stack Information:
36 (
58 *
87 multiplicative_expression
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
3 INT
Stack Information:
78 INT
36 (
58 *
87 multiplicative_expression
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
+ OPERATOR
Stack Information:
102 +
67 additive_expression
36 (
58 *
87 multiplicative_expression
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
4 INT
Stack Information:
78 INT
102 +
67 additive_expression
36 (
58 *
87 multiplicative_expression
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
) DELIMITER
Stack Information:
107 )
70 logical_or_expression
36 (
58 *
87 multiplicative_expression
48 +
17 additive_expression
79 =
40 ID
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
; DELIMITER
Stack Information:
55 ;
23 expression
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
b ID
Stack Information:
40 ID
164 statement_list
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
= OPERATOR
Stack Information:
79 =
40 ID
164 statement_list
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
40 ID
79 =
40 ID
164 statement_list
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
+ OPERATOR
Stack Information:
48 +
17 additive_expression
79 =
40 ID
164 statement_list
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
2 INT
Stack Information:
41 INT
48 +
17 additive_expression
79 =
40 ID
164 statement_list
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
; DELIMITER
Stack Information:
55 ;
23 expression
164 statement_list
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
} DELIMITER
Stack Information:
171 }
164 statement_list
154 {
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
else KEYWORD
Stack Information:
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
{ DELIMITER
Stack Information:
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
b ID
Stack Information:
40 ID
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
= OPERATOR
Stack Information:
79 =
40 ID
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
9 INT
Stack Information:
41 INT
79 =
40 ID
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
; DELIMITER
Stack Information:
55 ;
23 expression
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
= OPERATOR
Stack Information:
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
40 ID
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
* OPERATOR
Stack Information:
58 *
29 multiplicative_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
b ID
Stack Information:
88 ID
58 *
29 multiplicative_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
+ OPERATOR
Stack Information:
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
b ID
Stack Information:
88 ID
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
+ OPERATOR
Stack Information:
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
( DELIMITER
Stack Information:
36 (
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
0 INT
Stack Information:
78 INT
36 (
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
- OPERATOR
Stack Information:
103 -
67 additive_expression
36 (
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
8 INT
Stack Information:
78 INT
103 -
67 additive_expression
36 (
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
* OPERATOR
Stack Information:
109 *
126 multiplicative_expression
103 -
67 additive_expression
36 (
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
a ID
Stack Information:
77 ID
109 *
126 multiplicative_expression
103 -
67 additive_expression
36 (
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
) DELIMITER
Stack Information:
107 )
70 logical_or_expression
36 (
48 +
17 additive_expression
79 =
40 ID
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
; DELIMITER
Stack Information:
55 ;
23 expression
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
} DELIMITER
Stack Information:
124 }
85 statement_list
46 {
158 else
148 statement
138 )
118 expression
82 (
44 if
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
} DELIMITER
Stack Information:
90 }
51 statement_list
20 declaration_list
16 {
14 )
12 (
11 ID
5 type_specifier
0 $

Inserted element:
$ DELIMITER
